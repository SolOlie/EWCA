@using System.Web.UI.WebControls
@using DevExpress.XtraReports.Configuration
@model  FrontendSecure.Models.AssetListPartialModel
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "AssetTableExpress";
        settings.CallbackRouteValues = new { Controller = "Assets", Action = "AssetTableExpressPartial", customerid = Model.CustomerId};

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Assets", Action = "AssetTableExpressPartialAddNew" };
        settings.Columns.Add(column =>
        {
            column.Caption = "";
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Ændre", "Edit", new { id = DataBinder.Eval(c.DataItem, "Id") })
                );
            });

            settings.Columns.Add(col =>
            {
                col.Caption = "";
                col.SetDataItemTemplateContent(c =>
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("Detaljer", "AssetDetails", "Customers", new { id = DataBinder.Eval(c.DataItem, "Id"), customerId = Model.CustomerId}, null)
                    );
                });
                col.Width = 50;
                col.SetHeaderTemplateContent(c =>
                {

                });

            });
            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 70;
        });

        settings.ClientLayout = (sender, e) =>
        {
            if (e.LayoutMode == ClientLayoutMode.Saving)
            {
                Session["LayoutAsset"] = e.LayoutData;
            }
            else
            {
                e.LayoutData = (string)Session["LayoutAsset"];
            }
        };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Assets", Action = "AssetTableExpressPartialDelete" };
        settings.CommandColumn.Width = 50;
        settings.CommandColumn.Caption = " ";
        settings.SettingsText.CommandDelete = "Slet";

        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = false;

        settings.KeyFieldName = "Id";

        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsSearchPanel.Visible = true;

        settings.SettingsSearchPanel.ShowApplyButton = false;

        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add(c =>
        {
            c.Caption = "Navn";
            c.FieldName = "Name";
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Type.Description";
            c.Caption = "Type";

        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "Usedby";
            c.Caption = "Bruger";
        });
        settings.Columns.Add("Note");
        settings.Columns.Add("Login");
        settings.Columns.Add("Password");
        settings.Columns.Add(c =>
        {
            c.FieldName = "IpAddress";
            c.Caption = "IP";

        });
    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model.Assets).GetHtml()