@using DevExpress.Web.ASPxRichEdit.Forms
@{

    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "CustomerTableExpress";
        settings.CallbackRouteValues = new { Controller = "Customers", Action = "CustomerTableExpressPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Customers", Action = "CustomerTableExpressPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Customers", Action = "CustomerTableExpressPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Customers", Action = "CustomerTableExpressPartialDelete" };
        settings.SettingsText.CommandDelete = "Slet";
        settings.CommandColumn.Caption = " ";
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.ClientLayout = (sender, e) =>
        {
            if (e.LayoutMode == ClientLayoutMode.Saving)
            {
                Session["LayoutCustomer"] = e.LayoutData;
            }
            else
            {
                e.LayoutData = (string)Session["LayoutCustomer"];
            }
        };
        settings.Columns.Add(column =>
        {
            column.Caption = "";
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Ændre", "Edit", new { id = DataBinder.Eval(c.DataItem, "Id") })
                );
            });

            settings.Columns.Add(col =>
            {
                col.Caption = "";
                col.SetDataItemTemplateContent(c =>
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("Detaljer", "Details", "Customers", new { id = DataBinder.Eval(c.DataItem, "Id") }, null)
                    );
                });
                col.SetHeaderTemplateContent(c =>
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("Ny", "Create", "Customers").ToHtmlString()
                    );
                });
                col.Width = 50;
            });

            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 50;

        });


        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = false;
        settings.CommandColumn.Width = 50;

        settings.KeyFieldName = "Id";

        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsSearchPanel.Visible = true;
        settings.SettingsSearchPanel.ShowApplyButton = true;

        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add("Firm");
        settings.Columns.Add("Address");
        settings.Columns.Add("Date");

        settings.Columns.Add(col =>
        {
            col.Caption = "";
            col.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Exporter", "Export", "Import", new { customerId = DataBinder.Eval(c.DataItem, "Id") }, null)
                    );
            });
            col.Width = 70;

        });

        settings.BeforeGetCallbackResult = (s, e) =>
        {
            if (ViewData["EditError"] != null)
            {
                MVCxGridView gridView = (MVCxGridView) s;
                gridView.Settings.ShowFooter = true;
            }
        };


        if (ViewData["EditError"] != null)
        {

            settings.SetFooterRowTemplateContent(c =>
            {
                Html.ViewContext.Writer.Write(ViewData["EditError"]);
            });

        }
    });

}
@grid.Bind(Model).GetHtml()
