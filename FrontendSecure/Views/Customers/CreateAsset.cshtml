@model  FrontendSecure.Models.CreateAssetModel

@{
    <script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
}

@using (Html.BeginForm("CreateAsset", "Customers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Opret udstyr</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Asset.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asset.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Asset.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asset.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asset.Usedby, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.Usedby, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.Usedby, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asset.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asset.InstallationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.InstallationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.InstallationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asset.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asset.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asset.IpAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.IpAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.IpAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asset.OS, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.OS, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Asset.OS, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Asset.RAM, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.RAM, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Asset.RAM, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Asset.HDD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asset.HDD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asset.HDD, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Asset.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Asset.Customer.Id,
                    Model.Customers.Select(m => new SelectListItem()
                    {
                        Value = m.Id.ToString(),
                        Text = m.Firm
                    })
                    )
                @Html.ValidationMessageFor(model => model.Asset.Customer, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">

            @Html.LabelFor(model => model.Asset.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div style="display: inline-block; position: relative;" id="ma">
                    @Html.DropDownListFor(m => m.Asset.Type.Id,
                        Model.AssetTypes.Select(m => new SelectListItem()
                        {
                            Value = m.Id.ToString(),
                            Text = m.Description
                        }),
                        "Vælg type", new {id = "select"})
                    <div style="position: absolute; left: 0; right: 0; top: 0; bottom: 0; display: inline-block;" id="clearDropdown"></div>
                </div>
                <div style="display: inline-block; position: relative;">
                    <input placeholder="Ny type" name="atInput" id="assetTypeInput"/>
                    <div style="position: absolute; left: 0; right: 0; top: 0; bottom: 0;" id="clearInput"></div>
                </div>
                
                   
                

            </div>
        </div>

        <div style="display: inline-block; margin-bottom: 1%; margin-left: 17%;"id="addPortBtn">
            <label>Tilføj porte til switchen her: </label>
            <a class="btn btn-default"  onclick="showPopup()">
                <span class="glyphicon glyphicon-plus"></span>
            </a>
        </div>
        <div class="form-group">
            @Html.Label("Fil", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="attachment" name="upload" />
            </div>
        </div>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Opret" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div class="popup" style="position: absolute; display: none; z-index: 1; top: 55%; left: 10%; height: 500px; width: 700px; background-color: lightgray; border-radius: 5px;" id="PopupForAddPort">
    <div class="col-md-6" style="margin-left: 5%; ">
        <input placeholder="Port" style="margin-top: 2%;"/>
        <input placeholder="Uplink til" style="margin-top: 2%;"/>
        <input placeholder="Trunk" style="margin-top: 2%;"/>
        <input placeholder="VLAN" style="margin-top: 2%;"/>
        <textarea placeholder="Note" style="margin-top: 2%; width: 180px;"></textarea>
        <div><b>Tilføj porten til listen</b>
            <a class="btn btn-default" id="addPortsToListBtn">
                <span class="glyphicon glyphicon-arrow-right"></span>
            </a>
        </div>
        
        <div style="margin-top: 70%; margin-left: 10%; height: 50px; width: 100px; padding-top: 2%; padding-left: 2%;">
            <a class="btn btn-success" id="addPortsYesBtn">
                <span class="glyphicon glyphicon-ok"></span>
            </a>
            <a class="btn btn-danger" onclick="showPopup()" id="addPortsNoBtn">
                <span class="glyphicon glyphicon-remove"></span>
            </a>
        </div>
    </div>
    <div>
        <table style="width: 40%;">
            <tr>
                <th>Port number</th>
                <th>Uplink til</th>
                <th>VLAN</th>
            </tr>
            <tr>
                
            </tr>
        </table>
        
    </div>
</div>
<div>
    @Html.ActionLink("Tilbage", "Details", "Customers", new { id = Model.customerId }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document)
        .ready(function () {
            $("#select").val(1);
            $(function () {
                $('Select').change(function () {
                    if (this.value == 1) {
                        $('#addPortBtn').show();
                    } else {
                        $('#addPortBtn').hide();

                    }
                });
            });
            $("#select").removeAttr("required");
            
        });
    $("#select")
        .on('change',
            function () {
                     $("#assetTypeInput").val("");
                    $("#assetTypeInput").prop("disabled", true);
                    $("#clearInput").show();

                
            });

    $("#clearInput")
        .on('click', function () {
                $("#select").val(0);
                $("#select").prop("disabled", true);
                $(this).hide().prev("input[disabled]").prop("disabled", false).focus();
                $("#clearDropdown").show();
            
        });
    $("#clearDropdown")
        .click(function () {
            $("#assetTypeInput").val("");
            $(this).hide().prev("select[disabled]").prop("disabled", false).focus();

            $("#clearInput").show();
        });
    function showPopup() {
        $("#PopupForAddPort")
            .toggle('fast',function() {
                
            });
    }
    //$(function () {
    //    $('Select').change(function () {
    //        if (this.value == 1) {
    //            $('#addPortBtn').show();
    //        } else {
    //            $('#addPortBtn').hide();

    //        }
    //    });
    //});
    $('#addPortsToListBtn').click(function (event) {
           
           $.ajax({
               url: '@Url.Action("PostPort","Ports")', 
               data: $('#user_input').val(),
               success: function (data) {
                   $('.table').html(response);
               }
           });
       }
   );
</script>
